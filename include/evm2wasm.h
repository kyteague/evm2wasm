#pragma once

#include <map>
#include <string>
#include <tuple>

namespace evm2wasm {
    std::string wast2wasm(const std::string& input, bool debug = false);
    std::string evm2wast(const std::string& input, bool tracing = false);
    std::string evm2wasm(const std::string& input, bool tracing = false);

    enum class opcodeEnum {
        STOP,
        ADD,
        MUL,
        SUB,
        DIV,
        SDIV,
        MOD,
        SMOD,
        ADDMOD,
        MULMOD,
        EXP,
        SIGNEXTEND,
        LT,
        GT,
        SLT,
        SGT,
        EQ,
        ISZERO,
        AND,
        OR,
        XOR,
        NOT,
        BYTE,
        SHA3,
        ADDRESS,
        BALANCE,
        ORIGIN,
        CALLER,
        CALLVALUE,
        CALLDATALOAD,
        CALLDATASIZE,
        CALLDATACOPY,
        CODESIZE,
        CODECOPY,
        GASPRICE,
        EXTCODESIZE,
        EXTCODECOPY,
        BLOCKHASH,
        COINBASE,
        TIMESTAMP,
        NUMBER,
        DIFFICULTY,
        GASLIMIT,
        POP,
        MLOAD,
        MSTORE,
        MSTORE8,
        SLOAD,
        SSTORE,
        JUMP,
        JUMPI,
        PC,
        MSIZE,
        GAS,
        JUMPDEST,
        PUSH,
        DUP,
        SWAP,
        LOG,
        CREATE,
        CALL,
        CALLCODE,
        RETURN,
        DELEGATECALL,
        SELFDESTRUCT
    };

    std::string opcodeToString(opcodeEnum opcode);

    static std::map<int, std::tuple<opcodeEnum, int, int, int>> opcodes = {
        {0x00, {opcodeEnum::STOP, 0, 0, 0}},
        {0x01, {opcodeEnum::ADD, 3, 2, 1}},
        {0x02, {opcodeEnum::MUL, 5, 2, 1}},
        {0x03, {opcodeEnum::SUB, 3, 2, 1}},
        {0x04, {opcodeEnum::DIV, 5, 2, 1}},
        {0x05, {opcodeEnum::SDIV, 5, 2, 1}},
        {0x06, {opcodeEnum::MOD, 5, 2, 1}},
        {0x07, {opcodeEnum::SMOD, 5, 2, 1}},
        {0x08, {opcodeEnum::ADDMOD, 8, 3, 1}},
        {0x09, {opcodeEnum::MULMOD, 8, 3, 1}},
        {0x0a, {opcodeEnum::EXP, 10, 2, 1}},
        {0x0b, {opcodeEnum::SIGNEXTEND, 5, 2, 1}},

        // 0x10 range - bit ops
        {0x10, {opcodeEnum::LT, 3, 2, 1}},
        {0x11, {opcodeEnum::GT, 3, 2, 1}},
        {0x12, {opcodeEnum::SLT, 3, 2, 1}},
        {0x13, {opcodeEnum::SGT, 3, 2, 1}},
        {0x14, {opcodeEnum::EQ, 3, 2, 1}},
        {0x15, {opcodeEnum::ISZERO, 3, 1, 1}},
        {0x16, {opcodeEnum::AND, 3, 2, 1}},
        {0x17, {opcodeEnum::OR, 3, 2, 1}},
        {0x18, {opcodeEnum::XOR, 3, 2, 1}},
        {0x19, {opcodeEnum::NOT, 3, 1, 1}},
        {0x1a, {opcodeEnum::BYTE, 3, 2, 1}},

        // 0x20 range - crypto
        {0x20, {opcodeEnum::SHA3, 30, 2, 1}},

        // 0x30 range - closure state
        {0x30, {opcodeEnum::ADDRESS, 0, 0, 1}},
        {0x31, {opcodeEnum::BALANCE, 0, 1, 1}},
        {0x32, {opcodeEnum::ORIGIN, 0, 0, 1}},
        {0x33, {opcodeEnum::CALLER, 0, 0, 1}},
        {0x34, {opcodeEnum::CALLVALUE, 0, 0, 1}},
        {0x35, {opcodeEnum::CALLDATALOAD, 0, 1, 1}},
        {0x36, {opcodeEnum::CALLDATASIZE, 0, 0, 1}},
        {0x37, {opcodeEnum::CALLDATACOPY, 0, 3, 0}},
        {0x38, {opcodeEnum::CODESIZE, 0, 0, 1}},
        {0x39, {opcodeEnum::CODECOPY, 0, 3, 0}},
        {0x3a, {opcodeEnum::GASPRICE, 0, 0, 1}},
        {0x3b, {opcodeEnum::EXTCODESIZE, 0, 1, 1}},
        {0x3c, {opcodeEnum::EXTCODECOPY, 0, 4, 0}},

        // "0x40" range - block operations
        {0x40, {opcodeEnum::BLOCKHASH, 0, 1, 1}},
        {0x41, {opcodeEnum::COINBASE, 0, 0, 1}},
        {0x42, {opcodeEnum::TIMESTAMP, 0, 0, 1}},
        {0x43, {opcodeEnum::NUMBER, 0, 0, 1}},
        {0x44, {opcodeEnum::DIFFICULTY, 0, 0, 1}},
        {0x45, {opcodeEnum::GASLIMIT, 0, 0, 1}},

        // 0x50 range - "storage" and execution
        {0x50, {opcodeEnum::POP, 2, 1, 0}},
        {0x51, {opcodeEnum::MLOAD, 3, 1, 1}},
        {0x52, {opcodeEnum::MSTORE, 3, 2, 0}},
        {0x53, {opcodeEnum::MSTORE8, 3, 2, 0}},
        {0x54, {opcodeEnum::SLOAD, 0, 1, 1}},
        {0x55, {opcodeEnum::SSTORE, 0, 2, 0}},
        {0x56, {opcodeEnum::JUMP, 8, 0, 0}},
        {0x57, {opcodeEnum::JUMPI, 10, 0, 0}},
        {0x58, {opcodeEnum::PC, 2, 0, 1}},
        {0x59, {opcodeEnum::MSIZE, 2, 0, 1}},
        {0x5a, {opcodeEnum::GAS, 0, 0, 1}},
        {0x5b, {opcodeEnum::JUMPDEST, 0, 0, 0}},

        // 0x60, range
        {0x60, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x61, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x62, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x63, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x64, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x65, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x66, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x67, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x68, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x69, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x6a, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x6b, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x6c, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x6d, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x6e, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x6f, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x70, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x71, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x72, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x73, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x74, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x75, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x76, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x77, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x78, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x79, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x7a, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x7b, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x7c, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x7d, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x7e, {opcodeEnum::PUSH, 3, 0, 1}},
        {0x7f, {opcodeEnum::PUSH, 3, 0, 1}},

        {0x80, {opcodeEnum::DUP, 3, 0, 1}},
        {0x81, {opcodeEnum::DUP, 3, 0, 1}},
        {0x82, {opcodeEnum::DUP, 3, 0, 1}},
        {0x83, {opcodeEnum::DUP, 3, 0, 1}},
        {0x84, {opcodeEnum::DUP, 3, 0, 1}},
        {0x85, {opcodeEnum::DUP, 3, 0, 1}},
        {0x86, {opcodeEnum::DUP, 3, 0, 1}},
        {0x87, {opcodeEnum::DUP, 3, 0, 1}},
        {0x88, {opcodeEnum::DUP, 3, 0, 1}},
        {0x89, {opcodeEnum::DUP, 3, 0, 1}},
        {0x8a, {opcodeEnum::DUP, 3, 0, 1}},
        {0x8b, {opcodeEnum::DUP, 3, 0, 1}},
        {0x8c, {opcodeEnum::DUP, 3, 0, 1}},
        {0x8d, {opcodeEnum::DUP, 3, 0, 1}},
        {0x8e, {opcodeEnum::DUP, 3, 0, 1}},
        {0x8f, {opcodeEnum::DUP, 3, 0, 1}},

        {0x90, {opcodeEnum::SWAP, 3, 0, 0}},
        {0x91, {opcodeEnum::SWAP, 3, 0, 0}},
        {0x92, {opcodeEnum::SWAP, 3, 0, 0}},
        {0x93, {opcodeEnum::SWAP, 3, 0, 0}},
        {0x94, {opcodeEnum::SWAP, 3, 0, 0}},
        {0x95, {opcodeEnum::SWAP, 3, 0, 0}},
        {0x96, {opcodeEnum::SWAP, 3, 0, 0}},
        {0x97, {opcodeEnum::SWAP, 3, 0, 0}},
        {0x98, {opcodeEnum::SWAP, 3, 0, 0}},
        {0x99, {opcodeEnum::SWAP, 3, 0, 0}},
        {0x9a, {opcodeEnum::SWAP, 3, 0, 0}},
        {0x9b, {opcodeEnum::SWAP, 3, 0, 0}},
        {0x9c, {opcodeEnum::SWAP, 3, 0, 0}},
        {0x9d, {opcodeEnum::SWAP, 3, 0, 0}},
        {0x9e, {opcodeEnum::SWAP, 3, 0, 0}},
        {0x9f, {opcodeEnum::SWAP, 3, 0, 0}},

        {0xa0, {opcodeEnum::LOG, 0, 2, 0}},
        {0xa1, {opcodeEnum::LOG, 0, 3, 0}},
        {0xa2, {opcodeEnum::LOG, 0, 4, 0}},
        {0xa3, {opcodeEnum::LOG, 0, 5, 0}},
        {0xa4, {opcodeEnum::LOG, 0, 6, 0}},

        // "0xf0" range - closures
        {0xf0, {opcodeEnum::CREATE, 0, 3, 1}},
        {0xf1, {opcodeEnum::CALL, 0, 7, 1}},
        {0xf2, {opcodeEnum::CALLCODE, 0, 7, 1}},
        {0xf3, {opcodeEnum::RETURN, 0, 2, 0}},
        {0xf4, {opcodeEnum::DELEGATECALL, 0, 6, 1}},

        // "0x70", range - other
        {0xff, {opcodeEnum::SELFDESTRUCT, 0, 1, 0}}
    };

}
